// server.js - Node.js Server Engine
const express = require('express');
const mongoose = require('mongoose');
const dotenv = require('dotenv');
const path = require('path');
const cors = require('cors'); // Ensure CORS is installed: npm install cors

// Load environment variables from .env file
dotenv.config();

// Initialize Express app
const app = express();

// Middleware
app.use(cors()); // Enable CORS for all routes (important for frontend testing)
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// MongoDB Connection
mongoose.connect(process.env.MONGODB_URI, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
    // Note: useCreateIndex and useFindAndModify are deprecated and removed in Mongoose 6+
})
.then(() => console.log('MongoDB Connected Successfully!'))
.catch(err => console.error('MongoDB Connection Error:', err));

// --- Import Routes ---
const mkrRoutes = require('./routes/mkr');

// Use Routes
app.use('/api', mkrRoutes);

// --- Serve Frontend (index.html) ---
// Frontend file ko static folder se serve karein, ya seedhe index.html ko root par serve karein
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});

// --- 404 Handler ---
app.use((req, res, next) => {
    res.status(404).json({ success: false, message: 'Route not found' });
});

// --- Global Error Handling Middleware ---
app.use((err, req, res, next) => {
    console.error('X Server Error:', err.stack);
    res.status(500).json({ success: false, message: 'Something broke!' });
});

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(Server running on port ${PORT}));